name: Deploy SpringBoot with Docker to NCP

on:
  push:
    branches: [ feat/#33 ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ‚úÖ Checkout Repository
        uses: actions/checkout@v3

      - name: üß± Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: üìù Create .env.prod from secrets
        run: echo "${{ secrets.ENV_PROD_CONTENT }}" > .env.prod

      - name: üì¶ Export .env.prod for build
        run: |
          set -o allexport
          source .env.prod
          set +o allexport

      - name: ‚úÖ Make gradlew executable
        run: chmod +x ./gradlew

      - name: üèóÔ∏è Build Spring Boot with prod profile and .env
        run: ./gradlew build -x test -Dspring.profiles.active=prod --no-daemon

      - name: üê≥ Log in to NCP Container Registry
        run: echo "${{ secrets.NCP_REGISTRY_PW }}" | docker login ${{ secrets.NCP_REGISTRY }} -u ${{ secrets.NCP_REGISTRY_ID }} --password-stdin

      - name: üì¶ Build & Push Docker Image
        run: |
          IMAGE=${{ secrets.NCP_REGISTRY }}/onggiyonggi:latest
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: üì¶ Upload .env.prod to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          key: ${{ secrets.NCP_KEY }}
          source: ".env.prod"
          target: "/server/"

      - name: üîê Deploy to NCP Server via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.NCP_HOST }}
          username: ${{ secrets.NCP_USERNAME }}
          key: ${{ secrets.NCP_KEY }}
          script: |
            docker login ${{ secrets.NCP_REGISTRY }} -u ${{ secrets.NCP_REGISTRY_ID }} -p ${{ secrets.NCP_REGISTRY_PW }}
            docker pull ${{ secrets.NCP_REGISTRY }}/onggiyonggi:latest
            cd /server
            docker compose down
            docker compose up -d --force-recreate --remove-orphans
